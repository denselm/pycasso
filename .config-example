[File]
###################
# File Operations #
###################

# Flag indicating whether to save image after generation or not [boolean]
save_image=True

# File paths to external and generated images folder [string]
external_image_location=images/external
generated_image_location=images/generated

# Image format (most of the time it will be png) [string]
image_format=png

# File path to font file [string]
font_file=fonts/Font.ttc

# File paths to prompt subjects, artists and raw prompts text files [string]
subjects_file=prompts/subjects.txt
artists_file=prompts/artists.txt
prompts_file=prompts/prompts.txt

[EPD]
######################
# EPD Information    #
# (used by omni-epd) #
######################
# See https://github.com/robweber/omni-epd for supported displays for more information on omni-epd options

# Type of EPD display. See https://github.com/robweber/omni-epd for supported displays [string]
type=omni_epd.mock

# Mode of display [string]
mode=color

[Display]
#########################
# Display Modifications #
# (used by omni-epd)    #
#########################

# Rotation of image on display in degrees (integer)
rotate = 0

# Flag indicating whether to flip image on display horizontally and vertically [boolean]
flip_horizontal=False
flip_vertical=False

[Image Enhancements]
#######################
# Image Modifications #
# (used by omni-epd)  #
#######################

# Levels of contrast, brightness and sharpness for the display [integer]
contrast=1
brightness=1
sharpness=1

[Prompt]
#################################
# Automatic Prompt Construction #
#################################

# Pycasso mode to use in prompt generation [integer]
# Mode 1 - (preamble - subjects.txt - connector - artists.txt - postscript)
# Mode 2 - (preamble - prompts.txt - postscript)
# Mode 0 - Any of the above (randomly chosen)
mode=1

# Preamble text to insert before main prompt [string]
preamble=""

# Text to use as a connector between subject and artist [string]
connector=" by "

# Postscript text to insert after main prompt [string]
postscript=", digital art, trending on artstation"

[Text]
################
# Text Parsing #
################

# Flag indicating whether to add text to the display or not [boolean]
add_text = True

# Flag indicating whether to parse text from files with custom randomisation [boolean]
# Custom randomisation looks like: "A (Good|Bad) Dog".
# The above may return "A Good Dog." or "A Bad Dog"
parse_text = True

# Filename parsing: regex to find split point between preamble and main text in external image names [string]
preamble_regex = " .* -"

# Filename parsing: regex to find split point between subject and artist in external document names [string]
artist_regex =  in the style of

# Text to find and remove from any parsing of file names. Supports multiple lines of text to remove [string]
remove_text = ", digital art"
            "A painting of"
            "an oil painting of"
            "a surrealist oil painting of"
            "graffiti of"

# Flags indicating whether to draw text box background to the bottom or edges of the cropped image or not [boolean]
box_to_floor = True
box_to_edge = True

# Locations of the artist and title text boxes from the bottom of the cropped image in pixels [integer]
artist_loc = 10
artist_size = 14
title_loc = 28
title_size = 20

# Padding around the text box for artist and title text box in pixels [integer]
padding = 10

# Opacity of the text box [integer]
opacity = 150


[Icon]
#################
# Icon Settings #
#################

# Padding from the top left corner for the status icon in pixels [integer]
icon_padding = 10

# Size of the status icon in pixels [integer]
icon_size = 20

# Width of the line of the status icon in pixels [integer]
icon_width = 3

# Opacity of the status icon [integer]
icon_opacity = 150

[Logging]
####################
# Logging Settings #
####################

# File path of pycasso log file [string]
log_file = pycasso.log

# Logging level to save to log file. [integer]
# Levels: CRITICAL:50, ERROR:40, WARNING:30, INFO:20, DEBUG:10, NOTSET:0
log_level = 10

[Providers]
###################
# Provider Weight #
###################
# Comparative chances whether any particular provider is used [integer]
# EG "external_amount = 0", "historic_amount = 1" and "stability_amount = 2" would result in:
# External images never appearing, and approximately 1 historic image appearing for every 2 stable diffusion images
external_amount = 1
historic_amount = 0
stability_amount = 0
dalle_amount = 0

[Generation]
##################################
# Image Generation Configuration #
##################################

# Flag indicating whether to utilise 'infilling' to resend image back to provider and fill full frame [boolean]
infill = True

[PiJuice]
#########################
# PiJuice Configuration #
#########################

# Flag indicating whether to use PiJuice or not. Set to False if you do not know what that means. [boolean]
use_pijuice = False

# Flag indicating whether to shutdown after pycasso if running on PiJuice battery (not charging) [boolean]
shutdown_on_battery = True

# Time to wait in seconds before running pycasso. Can help in ensuring PiJuice is ready [integer]
wait_to_run = 30

# Battery percentage that pycasso should start showing low battery symbol at [integer]
charge_display = 15